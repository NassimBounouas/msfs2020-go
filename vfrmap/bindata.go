// Code generated by go-bindata.
// sources:
// html/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3c\xfd\x73\xdb\xb8\x95\xbf\xfb\xaf\xc0\xb2\xd3\x5a\x6a\x28\x88\xa4\x3e\x2c\xc9\x92\xda\x6c\x36\xde\xe6\xce\xd9\x64\x92\x6c\x3b\x77\x89\x47\x03\x91\x10\x85\x1a\x24\x78\x04\x64\x59\xf1\xea\x7f\xbf\x01\xf8\x05\x90\x94\xed\x64\x6f\xa6\xbd\xcc\xec\x5a\x04\xde\x37\x1e\xde\x7b\x78\xa0\x34\xff\xe1\xa7\x77\xaf\x3e\xfd\xd7\xfb\xd7\x60\x2b\x22\xba\x3c\x9b\x67\x7f\x00\x98\x6f\x31\x0a\xe4\x07\x00\xe6\x82\x08\x8a\x97\x11\xdf\x70\xcf\xf1\x9c\x5e\xc8\xfa\x77\x9b\x34\x42\xc9\xbc\x9f\xcd\x64\x50\x94\xc4\xb7\x20\xc5\x74\x61\x11\x9f\xc5\x16\x10\x87\x04\x2f\x2c\x12\xa1\x10\xf7\x93\x38\xb4\xc0\x36\xc5\x9b\x85\x15\x20\x81\x66\xe5\xe8\xe5\x1a\x71\x3c\x1e\xda\xe4\xef\x3f\xbe\xfb\xb0\x77\xfe\xf3\xe7\x90\x2d\xac\x06\x41\x2e\x0e\x14\xf3\x2d\xc6\xa2\xa0\x42\x31\xda\x50\x2c\xfe\xc9\xfb\xf9\x27\xe8\x73\x6e\x81\x7e\x8e\x1a\x61\x81\x40\x8c\x22\xbc\xb0\x50\x92\x50\xdc\x8b\xd8\x9a\x50\xdc\xdb\xe3\x75\x0f\x25\x49\xcf\x47\x09\x5a\x53\x6c\x01\x9f\xc5\x02\xc7\x62\x61\x1d\x30\xb7\x9e\x89\xcc\x05\x12\x3b\xde\x5b\xa3\xb4\xa7\x04\xd3\xa8\xac\x29\xf2\x6f\x9f\x4b\x47\x19\x4f\x43\xfe\xfb\xd5\x87\xb7\x28\x29\xb0\xb9\x9f\x92\x44\x00\x9e\xfa\x6d\xda\xfe\x93\x5b\xcb\x79\x3f\x83\x79\x16\x42\xca\x04\x12\x38\x78\x8b\xd2\x5b\x9c\xb6\xa2\x4b\x55\xf2\x45\x13\xf8\x5e\xf4\xa5\x41\xb3\x39\xa0\x9c\xc3\x06\x6b\x16\x1c\xc0\x43\x3e\x04\xc0\x16\x93\x70\x2b\x66\xc0\x75\x9c\x3f\x5e\x96\xa3\x11\x4a\x43\x12\xcf\x80\x53\x0d\x25\x28\x08\x48\x1c\x6a\x63\xc7\xb3\xfc\x43\x8d\x64\x40\x78\x42\xd1\x61\x06\x36\x14\xdf\x57\x04\xe4\x53\x2f\x20\x29\xf6\x05\x61\xf1\x0c\xf8\x8c\xee\xa2\xb8\x41\xec\x0f\x11\x4a\x34\x62\x6b\xe4\xdf\x86\x29\xdb\xc5\x41\xcf\x67\x94\xa5\x33\x10\xa6\xe8\x50\xa3\x1a\xa6\x6c\x3f\x03\x6e\x93\xd6\x96\x04\xb8\xb7\xdd\x05\x1a\xc1\x84\x71\x92\x09\x80\xd6\x9c\xd1\x9d\xc0\x15\x31\xc1\x12\x43\x67\x8a\x37\xc2\x18\xf8\xda\x23\x71\x80\xef\x67\xc0\x1d\xb6\x59\x06\x8e\x70\x54\x8d\xe7\xf2\x2a\x77\xd2\x04\x66\xb1\xe8\x71\xf2\x15\xcf\x80\xab\x43\xab\xf1\x7d\xbe\x1a\x6b\x46\x03\x8d\xd0\x2e\xe5\x92\x52\xc2\x48\x2c\x70\x5a\xa9\x59\xd3\x72\xb6\x65\x77\x38\xd5\x74\xcd\x25\xd8\x6f\x49\xa5\xa5\x66\x1c\xd3\x2e\x85\x16\x86\x54\xd2\x89\x7a\x88\x92\x50\x2e\x18\xd6\xb9\xb7\x53\x37\xf5\x33\xed\xd1\x5c\x4a\xc3\x34\xa6\x60\x3c\x41\x31\xdc\x10\x4c\x5b\x64\xec\xa5\x99\x95\x0c\x7b\x1f\x1b\xd8\x77\x88\xee\xb0\x86\xad\x49\xe6\x41\xe7\x49\xcc\x15\x8f\x10\xa5\xed\xf8\xae\x8e\x5f\xc9\x95\xfb\x0b\x74\x5b\x88\x0b\x4c\x71\xc2\x52\xd1\x4b\x58\xb2\x4b\x40\xd2\x62\x7a\x07\x7a\x3a\xd5\x96\x4d\x78\x7a\x39\x4e\xf3\xa1\x68\x8d\xe9\x63\x46\xf4\xea\xd2\xce\xfb\x2a\x8e\x2c\xcf\xf4\x98\xb4\x2c\x96\xa7\xb3\xd9\xc5\x6a\x0b\x83\x4e\xca\x98\xb0\xc1\x06\xf9\x82\xa5\x87\xae\xc6\x83\x6c\x40\x47\x46\x21\xb6\x01\x01\xde\x90\x18\x83\xc5\x62\x01\xac\x02\xd3\x02\x7f\xfa\x53\x3e\x01\x51\x14\xe8\x98\x20\x1f\xef\x7c\x2e\xe2\x9f\x75\x53\xb1\xa8\x2c\x71\x04\x98\x72\xac\x33\x8a\x58\xb0\xa3\x39\x23\xb6\xfe\x27\xf6\x85\x62\x93\x0d\x43\x7c\x2f\x8d\xc2\x4d\x56\x39\xd9\x4e\x8a\xff\x67\x47\x52\xdc\x29\x59\x76\x9b\x9c\x5a\xf1\x18\x13\xf0\x5a\x87\x2d\xec\x08\x3a\x62\x4b\xb8\x0d\x2a\x5b\x5d\xeb\xac\xad\x1d\xc7\x80\x8b\x94\xf8\xc2\xba\x3c\x2b\x87\xfb\x7f\xae\x98\xfc\x19\x5c\xc3\xb7\x3b\x2a\xc8\xbb\x44\x12\xe0\xef\x19\x3d\x50\x69\x49\xc2\x01\x02\x6a\x46\x0e\x5d\xcb\xa1\xfd\x96\xf8\x5b\x90\xa0\x54\x70\xe0\xa3\x18\xac\x25\xf1\x03\xc5\x01\x08\xc8\x66\x83\x53\x1c\x0b\x7a\x80\x3a\x6d\x96\x11\x9d\xe9\x6a\xfd\x39\xf3\x3a\x8d\x67\xcb\xb4\xfc\x97\x21\xbf\x09\xee\xaf\xe2\x99\xa6\x21\x45\xe2\x3a\x0e\x6d\x90\xa4\xf8\xee\x3a\xff\xac\xc2\xa5\x0d\x10\xa5\xd7\x48\xd0\x38\xe4\x5d\xbb\x8d\xe2\x26\x7e\x25\x13\xe8\xbd\x98\x01\x5f\xdc\xdb\xa0\xdf\x07\x62\x8b\xb3\xac\x7a\x2f\x80\x60\xc0\x97\x7b\x51\x63\x0c\x3a\xd9\x03\xa2\xdd\xd3\x22\xf2\x19\xf8\xfc\x70\xb4\x41\xf6\xdf\x0d\x60\x69\x29\xae\xe2\x91\x43\x81\x0d\x4b\x15\x3f\x25\x2d\x48\xb1\xd8\xa5\x31\x0e\xc0\xfa\xa0\x73\x84\xe0\xcd\x06\xf0\x5d\x92\x50\x82\x03\xb0\x27\x62\x0b\x50\xa5\xbd\xd8\xe2\x18\x10\x01\xf6\x84\x52\x69\x7f\x29\x6f\x01\x56\x92\x6e\x93\xd4\x67\xc9\xe1\x47\xc4\x71\x69\x72\x91\xee\x70\x1d\xf0\xd8\xb0\x9a\x94\x5e\x6c\x71\x5a\xe9\x90\xb2\x08\x14\x4e\xa2\x43\x1f\xb5\x87\x7e\xf9\xf9\x0e\xa5\xa0\xd5\xbd\x16\xe0\x1a\x5e\x61\x24\x76\x29\xfe\x39\x65\xbb\x04\xe2\x7b\x81\xe3\xa0\xf3\x70\xa6\x6d\x00\x12\x13\x41\x10\x55\xb1\xd0\x70\x00\xb9\xc4\x76\x21\x93\xb9\xd9\x32\x9e\x35\x75\xc1\xa2\x00\x86\xba\xe3\xc1\x1a\xd8\xe5\x99\x41\x48\xee\x2d\xb8\xa2\xe8\x80\x53\x49\xe1\xe1\x78\xd9\x32\xcd\xea\x1c\x4c\x20\x19\x39\x1a\xc2\x2c\x16\x60\x17\x67\x01\x28\x00\xbf\xfd\x56\x97\xb6\xae\x50\xc1\xaa\x06\xd6\xe9\x9a\xac\x8e\x2d\xd2\x73\x2c\xb2\x3d\xc2\x0b\xb3\x19\x48\x47\x5b\xc7\xa9\x33\xd0\x8d\xde\x66\x64\xdd\x94\x60\x61\xda\xc3\xb0\xb3\x5d\x53\x27\xfb\xb7\xae\x38\xb5\x03\xe4\xa4\x5e\xa6\x29\x3a\x80\x85\xc1\x0e\xb2\xc7\x10\x89\x0d\x28\x8e\xab\x25\x51\x14\x20\xc5\x71\x28\xb6\xb5\x35\x5e\x1b\x4e\x72\x5d\xba\xe1\xd1\x36\xf5\xa9\xd9\x3a\xc0\x14\x0b\xac\x63\x1b\x0a\xd7\x98\xc8\x8d\xdf\x21\x60\x01\x9c\x4b\x40\xc0\x5c\x0a\x77\x09\x5e\xbc\x20\xcd\x85\xd6\x05\xfe\x4c\x6e\xea\x22\xe9\x26\xab\xc3\x36\xbc\xe1\xd4\x32\x57\x3e\xd1\xb2\xab\xda\xd6\xb9\x34\x67\x0e\x93\x5b\xb2\xdd\xf6\xbf\xd3\x29\xf4\xd8\xdb\xba\xe4\x6a\xaa\x1d\xb7\x0c\xef\x75\xcc\x6a\xe2\xb7\xdf\x94\x44\xed\xf8\x32\xa3\xbc\x2b\x98\xd8\x95\x28\xed\xd0\x1c\x87\x11\x8e\x45\x9e\x70\x5a\x43\x07\x4b\x49\x48\x62\x54\x24\xa5\xca\x82\x6d\xd0\x18\xf9\xdb\x6b\x19\x6b\x3a\xfa\xa2\x1c\x70\x7a\x22\x1c\xa4\x38\x62\x77\x38\xc3\xc8\xe0\x6a\x0e\x90\x79\x70\xf7\x94\x2f\xba\xcf\xf3\xc5\x37\xc1\x7d\xb9\x91\xb2\x04\x25\x73\x4e\xa7\xd5\x24\xda\x12\xd8\x85\xaa\x9f\xc9\x8d\xf6\x19\xf4\x80\x7b\x63\x2b\x8f\x2a\xc3\x51\x8d\x94\x8c\x98\x44\xc5\x48\xb7\x29\x53\xdd\xec\x60\x01\x3e\x17\xc4\x9d\x9b\x9b\xcb\x06\xb8\xb1\xa6\x6d\x8a\xb4\x48\xec\xdc\x98\x9f\x1d\x5d\x5a\x93\xfc\xb1\x2e\xbd\x29\x1e\x4c\x76\x7c\xdb\xa9\x2c\xd1\xd4\xb6\xdf\x97\x95\x96\x4c\xb1\x18\x20\xe0\x6f\x51\x1c\xca\x2c\x5e\xe6\x5b\x96\xca\x79\x22\x54\x76\xa7\x88\x8b\xec\x78\xf6\x97\x16\xa3\x99\xaa\xfe\xb0\xd0\x94\x95\x7e\x9f\xd9\x54\x6e\xe4\x5e\xbb\x65\xfb\x7d\xf0\x6a\x8b\xfd\x5b\x49\xac\x60\xaf\xaa\xc0\xd2\x1f\x59\x0a\x50\x0c\x90\x0c\x38\x0d\x6c\xbd\x44\x6e\x09\xd4\xb5\xca\xbc\x8d\x7f\xee\xd7\x28\x08\x32\xa7\xbe\x86\x49\x5e\x2d\x74\x4c\xab\xda\xad\x1c\x4c\xfd\xbb\xdd\xc6\x5a\xb5\xd6\xd8\xff\x27\xac\x3f\x1b\xac\x6f\x5a\x59\xd7\x17\xfe\x11\xd7\x6c\x62\x9f\x76\x7a\xd2\x74\xfa\xe3\x63\x55\x41\x56\x75\x2a\x75\x4f\x17\x02\x61\x6b\x86\xa8\xaf\x99\x46\xaa\x11\xea\x9e\x43\xfb\x63\xa6\xd4\x93\x65\x06\xad\xb4\xbe\xf9\x9d\x81\x93\x9a\xdb\xf2\x80\x53\x58\xc9\xd3\xa9\xaf\xdb\xb1\xbe\x5d\x73\x8d\x69\x8b\x8e\x67\xad\x48\x27\xce\x56\x8b\xd6\x9a\xf8\x52\x43\x8b\xda\xd1\x9e\x5b\x04\xe7\x82\xc6\x78\xdf\xca\xa9\x89\xad\x9d\x2d\x4b\xf1\x8f\xdd\x4a\x95\xd6\x93\x24\xc5\x02\x6c\x77\x65\x07\x49\x3e\x46\x28\x31\x1f\xd3\xdb\xaa\x79\x50\x8d\x7c\xca\xbb\x07\xcd\x99\x37\x3e\x8b\xf5\x51\xd5\x5e\xd0\x07\xf6\xdc\x98\xa6\x28\xc6\xab\x06\x50\xd1\x9d\x68\xce\x6c\x18\xa5\x6c\xbf\x52\x78\xd2\xa0\x88\x72\xac\xcf\xcb\x10\xbb\x4a\x15\xb2\x51\xf2\xcb\x39\x7e\x17\xbe\x97\x78\x52\xc6\x8f\x22\x25\x71\x08\x16\xe0\x7c\xfe\x97\xfb\x88\x82\x3b\x9c\x72\xc2\xe2\x85\xe5\x42\xc7\x02\x38\xf6\x59\x40\xe2\x70\x61\xfd\xfa\xe9\xaa\x37\xb1\x00\x17\x28\x0e\x10\x65\x31\x5e\x58\x31\xb3\xfe\xb2\x9c\xf3\xbb\x10\xdc\x47\x34\xe6\x0b\x6b\x2b\x44\x32\xeb\xf7\xf7\xfb\x3d\xdc\x0f\x20\x4b\xc3\xbe\xe7\x38\x4e\x9f\xdf\x85\x56\xde\x38\x5d\x58\xde\x70\x0a\x27\x43\x0b\xec\x49\x20\xb6\xf2\x71\x02\xbd\x91\x65\xb2\x5d\xaa\x36\x72\x80\x04\x02\x24\x58\x58\xc5\xc3\xd4\xea\x2f\xe7\x09\x12\x5b\x35\x2a\x3f\x8c\x2e\xbc\xa1\x05\x82\x85\xf5\x16\x78\xc3\x0b\x38\x72\x87\xce\xd0\x76\x47\x1e\x1c\x3a\xde\x78\x0c\xdc\xc1\x14\x3a\xa3\x8b\x89\x6b\x5f\xb8\x70\xe2\x38\xd3\xe1\x18\xf8\xc0\x81\x13\xc7\x1b\x4f\xec\x9e\xeb\xc1\xe1\xc8\x9d\x0c\x47\xc0\x85\x03\x6f\x78\x31\xb0\x7b\x43\x07\x7a\xa3\xb1\xc4\x75\xe0\x64\x34\x94\x50\xc3\x11\x1c\xba\x17\xa3\xe9\x14\xf4\x06\x70\x3a\x74\x06\x43\xbb\x37\x1c\x40\x6f\x3c\x1e\x8e\x3d\xd0\x1b\xb8\xd0\x1b\x38\xee\xc4\xee\x79\x43\x38\x1e\x38\xae\x3b\x1d\xa8\xd1\xe1\x64\x30\x18\xd9\xbd\x11\x1c\x78\xce\x60\x7c\x01\x7a\x0e\x74\xc6\xd3\x81\x3d\x82\xde\xc4\x1d\x8c\x5d\xd0\x73\xa1\xe3\x8e\x1c\xcf\x1e\x78\x70\x34\x9d\x0c\x26\x13\x39\xe4\x3a\xc3\x0b\xd7\x1e\x39\x70\x32\x18\x8f\x3d\x0f\x5c\x03\x07\x7a\x93\xa1\x77\xe1\x5e\xd8\xee\x68\x08\x07\x17\xa3\xb1\x07\x1c\xdb\x9d\x38\xd0\x9d\x8e\x2e\x46\x80\x02\xd7\x75\xe0\xc8\x71\x46\x13\xbb\x37\x72\xe0\x70\xe2\x0d\xa6\x60\x00\xa7\xd3\xc1\xc0\xb3\x27\x0e\xf4\xa6\xee\x58\xca\xe4\x41\x67\xe8\x8d\xc6\x17\xb6\xe7\xc1\xe9\x60\xe2\x8e\xa5\x4c\x9e\x33\x98\x0c\x47\xb6\x3b\x86\x93\xe9\x78\x3a\x00\x43\x0f\x4a\x5e\x17\x9e\xdd\x73\x5d\x38\x9a\x8e\x94\x2d\x1c\x67\x62\x3b\xd0\x1d\x4c\x47\x12\xe0\xc2\x1d\xb8\xae\xed\x3a\x70\xea\x4e\x2e\xa6\x92\xca\xc8\x99\x7a\x53\xbb\x27\xa9\x4c\x3c\x37\x63\x36\x1c\x0d\x2e\x86\x76\xcf\xf3\xe0\x60\x3a\x75\x06\xc0\x83\x63\xd7\x1d\x78\x76\x6f\xe2\xc0\xc1\xc8\x73\x46\xc0\x75\x5d\x38\x18\x4d\xa7\x23\x7b\x38\x81\x23\x67\xec\xba\x92\xd6\xc5\x60\x38\x95\x78\x23\x78\x71\xe1\x4d\x47\xe0\xab\x05\x36\x84\xd2\x5e\xba\xa3\x78\x61\xe1\x3b\x1c\xb3\x20\xc8\xc6\x16\xd6\x6a\xf5\xea\xdd\xf5\xbb\x0f\xab\x95\xf4\x0d\xe9\x69\xcb\xf3\xb3\xfa\xb6\x92\x6e\xfe\x23\x45\xfe\xad\x3a\x85\x10\x9f\xc5\x1d\xad\xf5\xe6\xb3\xf8\xd7\x94\xce\x32\x57\xc7\xbf\x7e\x78\xd3\xd1\xaf\x6b\xf8\x5d\xf8\xe2\x3e\xa2\xb6\x05\x5e\xb4\x6c\x9b\x2e\x4c\x71\x42\x91\x8f\x3b\xd6\x1f\x2c\xdb\xfa\xa3\x37\xb0\xb4\xa1\x4a\x36\x1b\xe4\xb7\x24\x5a\x3b\x47\x32\xfe\xa8\x3a\x02\x9f\xc7\x43\x1b\x8c\x87\x37\xf6\x59\x15\x79\x5b\x54\xf8\xc7\x96\x08\xfc\xaf\x54\x41\x75\xae\x7f\x97\x0a\x3f\xa7\x58\x9d\xbf\xfe\x65\x2a\x84\x52\x80\xe7\xab\x90\x7f\x0c\x98\xbf\x93\x19\x1e\xb2\xf8\x16\x1f\x76\x89\x96\xc0\x3a\xd2\x1f\x85\x91\xb4\x64\x01\xa9\x46\xe1\x2d\x3e\x64\xe5\xe2\x6b\xee\xa3\x04\x5b\x5d\x23\x8d\x0b\x16\x86\x14\xaf\xb2\x40\x6e\xf4\x40\xca\xb6\x68\x21\x40\x55\xb8\x26\x38\x5e\x91\x78\x15\x32\x26\x71\x23\x94\x70\xa3\xd4\x90\x65\xc6\x2e\xa5\x60\x01\x54\x30\xe6\x79\x34\xce\xc0\xa1\xcf\xa2\xbe\x44\xe9\xff\x55\x1a\x52\xcb\x10\x90\x22\x41\xc4\x2e\xc0\xe0\x05\xb0\xec\xc6\x24\x8b\x43\x73\x36\x42\x89\xac\x37\xfe\x9b\xb1\xa8\xd3\x95\xa3\x5f\xad\x52\x84\x3d\x89\x03\xb6\x87\x52\xd2\xce\x2e\xa5\xf6\xf9\x6a\x4d\x51\x7c\x7b\xde\x6d\x5c\x5c\x64\x69\xd1\xac\x19\x4a\x4d\x7d\x16\x25\x3b\x81\x3f\x6d\x53\xcc\xb7\x8c\x06\xbc\x13\x91\xd8\x06\x11\xba\xef\x9a\xea\x72\x81\xe5\x82\x74\x22\x74\xdf\x8b\x48\xdc\xed\x4f\x2f\x8d\x79\x51\x50\x90\x87\x69\x12\x9f\x98\x54\x55\x59\xf9\x74\xa3\xdf\xcf\xa4\xa0\xa3\x24\x45\x3c\x6b\x7c\xc8\x0f\x73\x70\xa1\x3e\xbc\x78\x61\xd6\x2b\x15\xbd\xac\x34\xab\x98\xbf\x58\x28\x49\x5b\x9a\xdf\x5a\x01\x5a\x20\x9f\x99\x10\xa5\x51\x76\x49\x80\x04\x7e\x8b\x92\x4e\xc4\x43\x93\xb3\xd4\x26\x61\x59\xef\x27\xeb\x2c\x4b\x98\x72\x61\x6d\xa0\x9e\x8a\x95\x34\x0a\xc4\xac\x60\xa9\x5a\x6c\x9d\x84\xf1\x13\x00\x1f\x98\x40\x52\x92\x97\x71\x48\xb1\x62\xb0\xc5\x48\x16\x08\x06\xbc\xcf\x62\xce\x28\x86\x94\x65\x42\x88\x14\xf9\xd8\x24\x49\x36\x9d\x62\xe9\xc1\x0f\x5a\x17\xd1\xdc\x22\xa5\x7b\xe4\x4d\x02\xb3\x53\x78\xac\xa9\x2f\xd2\xb5\x0c\xf1\xff\xf1\xf1\xdd\x2f\x30\x41\x29\xc7\xed\xcc\xcb\x15\xd5\x1a\x59\x12\x35\xef\x06\x81\x4b\x40\xea\xcb\xaa\x2b\x64\xbd\x92\x67\x5b\x12\x87\x72\x23\x48\x3c\x79\x1c\xd6\x5d\x20\x1b\xfa\x7c\x8e\xa8\x38\xbf\x01\x8b\x6a\xe0\xa5\x1c\xb8\x6c\x03\xa5\xa8\x06\x7a\x8d\x4e\x82\xc6\x61\x0d\x54\x0e\xb4\x79\x95\x21\xb4\x48\x6f\xd7\x85\xc0\x5d\x63\x0b\x20\x2a\x78\x4e\x0f\x46\x28\xe9\xdc\x83\xc5\x12\xdc\xe7\xe2\x57\xa0\x89\xde\xf0\x6e\xab\xea\x3b\x92\x82\x6d\x98\xed\xe4\xdd\xc8\x53\x97\x22\xd2\xfa\xb5\x13\x4f\xd6\xbf\x3b\xd1\xad\x41\x54\x7c\xd2\x77\x72\x33\x78\xbc\x45\x62\x0b\x23\x12\x43\x94\x24\xf4\xa0\x1e\x6d\xa5\x7a\xd7\x06\xd9\x1c\xba\x6f\xce\x35\xdb\x1c\xf5\x0e\xa8\xc1\xb9\xe8\xcc\xb6\xb7\xa1\xb2\xcc\x90\x29\x08\x11\x15\x60\xbe\x30\xd1\xa5\x23\xb5\x9e\xe9\xf3\xf8\x40\xda\x4e\xe3\x8f\x3f\xe7\x98\xad\x52\xd6\x9a\x6c\x2d\xab\xc3\x67\xe0\x73\x8d\xe0\x43\x7e\x15\x7d\xfe\x07\xc7\x71\x9c\xab\xab\xf3\xa3\x6d\x8c\x0d\x5b\xc6\x26\xd9\xd8\x23\x94\xae\xae\x7e\x74\xea\x58\xaf\x1d\xa7\x36\x26\xe9\xa8\xb1\x93\x94\xae\xae\x72\x08\x63\xec\x55\x83\x92\x84\x92\x63\x06\xa1\x9b\xb3\x13\xe6\x28\xde\x32\x18\xe9\x83\xd2\xe5\x5f\xa1\x64\x06\xce\xd7\x3b\x21\xce\xf5\x29\x96\x20\x9f\x88\xc3\x0c\x38\xf0\xc2\xc0\xe1\x11\x63\x62\x7b\xa5\x6e\x43\x67\xc0\x3d\x76\x21\x0a\x82\x4f\xac\x13\xa1\xc4\xf4\x34\xed\x34\x08\x13\xc6\x21\x89\x63\x79\xd6\x54\x0d\xe1\x5f\x76\xd1\x1a\xa7\x32\x46\xcb\xe0\xde\x85\x82\x5d\x91\x7b\x1c\x74\xc6\xdd\x32\x3d\xeb\x20\xb2\x3c\xaa\x40\xf4\x45\xef\xf7\x75\x36\xa1\xcc\xe9\x8a\xcf\xdf\x3e\xbd\xbd\x96\x05\xc4\x1c\x65\xef\x1d\x7d\x79\xba\x94\xc8\x85\x29\x05\xc8\x39\x3f\x52\x2f\x7c\xb1\x96\x19\x25\x39\xc7\xe7\x7d\xb4\xb4\x0c\x0b\xc8\xad\xa2\x1f\x71\xeb\x1b\x43\x52\x4c\x50\xfc\x89\x35\x92\xd5\xb1\x96\x3c\xdb\x73\xe8\xdf\x7e\xfd\xa9\x9e\x43\xb7\xbb\x40\x6e\x4b\x95\x1f\x0d\x8b\xcb\x2c\x52\x4c\x5c\x1a\xe0\x79\xf2\x6b\x40\xe7\xe3\x26\x30\x22\x29\x4f\x30\x0e\x9a\xb4\xf3\x09\x13\xfc\x0e\xa7\x82\xf8\x88\xae\xda\x91\xcc\xe9\x76\x4e\x2b\x91\xee\x4c\x55\xac\x8e\x5a\x0e\x8d\xa9\x82\x91\x4b\xd2\xb5\x4c\x22\x1b\x8a\x12\xde\x60\xab\x46\x4d\x40\x91\x92\xa8\x01\x27\x07\x4d\xb0\x74\x17\x04\x38\x5d\xb5\x42\x6b\x73\x8d\x2a\x71\x2f\x03\x7a\x8c\xf7\xe0\x1f\x78\xfd\x91\xf9\xb7\x58\x74\xac\xbd\xf4\x46\xa9\x49\x5e\x6c\x52\xe6\xab\xb2\x04\x6e\x19\x17\x31\x8a\x94\x42\xb3\x36\x00\xd5\x0f\x79\x01\xac\xfe\x9e\x5b\xa5\xdb\xec\x39\x64\xb1\x2c\x58\xf5\xc2\xbe\x6b\xbc\x18\xa4\xa5\xd2\x3d\x57\x65\x78\x85\x7e\x34\xe8\xf8\x94\x71\xfc\x5c\x42\x0a\xf8\x14\xa5\x08\x73\x8e\x42\x83\x16\xae\x17\xfb\x11\x0f\xcd\x92\x07\x43\x79\x6e\xea\x5e\x9e\x64\x29\xa7\x2d\x55\x0e\x6a\x40\x66\xb7\x28\xe2\xa1\xb6\x19\xcd\x0d\x53\xe1\xc8\x2d\x1a\xa1\x44\x35\xe8\xab\xfa\xcd\xd8\xa7\x66\xbd\xda\xf2\xde\xc7\x65\xe3\x84\x43\x62\x22\x24\x42\x5d\xd1\x5a\x6d\x3b\x1c\xc0\xf1\x68\x38\x1c\xdb\x60\x0c\xa7\x9e\x3b\x9d\xe8\x01\x54\xc2\x33\x1e\xe5\x7e\x73\x0d\x3f\x11\x9a\xdf\x2f\x15\x2d\xaa\x07\x7e\x84\x82\x50\xac\x8e\x29\x5c\xa4\x18\x0b\x19\x51\x58\x1a\xf6\x1f\xbe\x1e\xfb\x0f\xf7\xc7\xfe\xc3\xe1\x08\x93\x38\xb4\x6a\x25\x0d\xba\x97\x51\x6c\x06\xdc\x89\x1e\xd9\x23\x12\x67\xc3\x9e\x3e\xba\x61\x69\x84\xc4\x0c\x68\x2f\x84\x1a\xe9\x60\xb7\x0e\x58\x84\x88\xca\xb3\x16\x52\x5d\x02\xf9\x3f\xdf\xaa\x52\xd1\xb1\x6b\x1e\x58\xa4\xbc\x88\x24\x2b\x1f\xf9\x5b\x1c\xac\xd6\x88\x63\xb9\x06\xcf\xd0\x54\xc6\x59\x98\xa3\xc3\x18\x8b\x7e\x88\xd9\x1e\xaf\x15\xa1\x3e\xc7\xe9\x1d\xf1\x71\x5f\x44\xbc\xef\x42\x07\x3a\xfd\x82\x51\xce\xe1\xaf\xaf\xdf\x7f\xfc\xf9\x8f\x83\x97\x53\xc7\x99\xba\x83\xbf\x26\xf1\xf3\x0d\x35\x6c\x35\x94\x31\x2a\xa2\xfc\x45\x0e\xdb\xc8\x4f\x01\x16\xd8\x17\x1f\xb0\x20\x31\x6a\xce\xeb\xe6\xb3\x5c\xcf\xfa\x06\xcb\x8b\x14\xc5\x3c\x41\x29\x8e\x45\xed\x05\x92\xba\xbd\xb9\x40\x11\x8e\x57\xaa\x7b\xb3\xda\xe7\x1d\x98\x27\x6d\x9d\x61\xa9\x24\x29\x58\x8c\xd3\x7f\x73\xa7\xca\x95\x14\x38\x4d\x11\x89\xbf\x55\xc1\x0c\xeb\xff\x87\x8a\x7b\x24\x70\xfa\x8d\x0a\x2a\x1c\x55\x3a\xfe\x9b\xeb\xe8\xa3\x54\xb0\x55\x80\xd2\xdb\x53\x1a\xca\xb4\xa9\xa0\x82\x75\x2f\xdf\xd8\xbc\x27\x75\x0e\x29\x5b\x23\x0a\x39\xa7\x70\x83\xb8\xa0\x07\x15\x21\x24\xa9\x15\xa2\xf4\xdf\x58\xef\xb3\x4a\x88\x2a\x0a\xca\xfc\x61\x45\x28\xa9\xc9\x99\xbd\x00\x35\x03\x9f\x55\x72\xb8\xd1\xd9\x66\x2f\x87\xce\x64\x96\xd1\x87\xbf\x66\x6a\x39\xfa\x18\x12\x22\x25\xeb\x9d\x4c\x56\xaf\x58\x2c\x52\x46\x67\xd9\xed\x8b\x21\x9f\x79\xc4\x56\x28\x2a\x7d\xf9\x19\x0a\xd4\xa8\x74\x1e\xaa\x77\xac\xad\x35\x13\x82\x45\x14\x6f\x84\xa5\xab\x99\x81\xcb\xe3\xc2\x4b\x0d\xf1\x44\x89\xde\xcc\x69\x3e\x4b\x0e\xea\xfd\xd5\x2f\x16\x10\x28\x0d\xb1\x58\x7c\xb1\xb2\xbe\xdc\x17\x2b\x7b\xf7\x71\xf1\xc5\xfa\x62\x2d\xdf\x25\x38\xfe\xa8\x50\xdf\xa2\x44\x55\xe5\xbf\x47\x88\x3c\xd3\x3c\xc5\x54\x82\xbe\x7c\xf3\xfe\xbb\xd8\xcd\xfa\xea\x18\xa2\xed\xd7\xa7\xb8\x7d\x54\x90\xdf\xad\x9b\xda\x3e\x2a\x2e\x3c\xc5\xe8\x95\x84\xac\xf3\x69\x61\xd8\x3c\x00\x4a\x9f\x91\xdb\xf3\x2d\x4a\xd4\xfb\x7a\xc6\xc9\xc7\x32\xd6\xc8\x9a\x49\x67\x36\x4f\xc4\x56\xa6\x22\xf8\x94\x45\x66\x6b\x56\x0b\xf0\x27\xa0\x65\xa2\xaa\x60\xb5\x8c\xd7\x0e\xff\x0f\x19\x16\x2b\x78\x15\x25\x6b\x90\xca\x02\xe0\x27\x19\x90\x3a\xbf\x48\xf7\x03\x6f\x59\x80\xbb\xd6\x4c\x0b\x55\x15\x4a\x51\xfc\x9a\xf5\xce\x1d\x4e\x29\x3a\xb4\x5b\xe2\x17\x74\x47\x42\x94\xbd\xd6\x0a\x7e\x92\x75\xed\xec\x44\x81\xd4\xe4\xa2\x6e\xa7\x8b\xdd\x98\x45\x86\x4e\x61\x73\x5b\x67\x7b\xe2\x90\x9e\xf5\x44\xb3\x6e\x98\xfa\x28\x0f\xa2\x66\xbc\x21\xbe\xdc\xd2\xe6\x15\x94\x6e\xa1\x54\x6f\xa6\xce\x80\xd3\x36\xf7\x4e\xbd\x8e\x30\x03\x56\x16\xa1\xb4\x58\xa9\x87\x87\xbc\x41\xab\x0b\x5a\x9b\x5a\x93\x38\x78\x2f\x0f\xfa\xea\x95\x10\xf9\xf7\x01\xed\x04\x7b\x8f\xe2\x3c\x7a\x1d\xbb\xb5\x06\xb0\x7c\x7c\x95\x7d\x4d\xa7\xa3\x37\x0a\x64\x70\xee\xd6\xbd\x35\xe3\xf2\xde\xac\xd1\x1d\xdb\x69\x08\x52\x5c\x98\xeb\x86\x2b\x91\x6d\xf0\xd0\xd4\xaa\xc0\x78\x44\xbb\x12\xe4\x99\x5a\x16\x6a\x99\xb7\xeb\xa5\x66\x05\x71\x8e\xc5\xaa\x04\xa9\xcb\x2a\x2d\xa0\x27\x1f\xc8\xe2\xce\x79\x90\xa2\x90\x0b\x94\x8a\x73\xfb\xc4\x99\x0d\xd4\x2f\xee\xcd\xd7\x97\x4f\x5f\x0a\x1d\x4d\xe7\xcb\xf8\xf9\x94\xf8\xb7\x8f\xf0\x6a\xd3\x00\xc3\xec\xa5\x89\xa7\x68\xcb\xcd\xa0\xf6\x45\xf6\x2e\xd7\x23\x5c\xd4\x85\x17\x54\xc7\xee\xc5\xe2\xf4\xae\x6f\xb6\x70\x8a\x5b\x05\xb9\x3b\x3a\xe6\x3d\xa7\xd9\xd2\xa9\xbe\xbc\xa0\xf1\x31\xe2\xd6\x73\x89\xab\x1b\xc8\x36\xe2\xcf\x43\x57\x7b\xf8\xc4\x25\xc4\xb1\x79\xc3\x55\x9e\x6a\xdb\x16\x22\x5f\x06\x8d\x73\xcd\x9b\xab\xfd\xd8\x58\xb1\x9a\xe7\x86\x09\xcf\xbf\xbe\x53\xbc\x99\x29\x17\xb9\xec\xfb\x4d\xba\xda\xbd\x5e\x36\x1b\x87\xda\xac\x79\xa6\xd7\xaf\xfe\x8a\xb6\x57\xed\x96\xcb\xe4\x5e\x36\xcd\x2a\x11\x9a\x14\x5a\x0e\xff\x0d\x2b\x95\x74\xb7\x38\xc5\x46\x07\xa0\xdf\xaf\x7a\x00\x35\x2b\x95\xef\x3d\x75\x6a\xe5\xb0\xd6\x1a\xe1\xea\x9e\x98\x6c\x0e\xfa\xeb\x9e\xb5\x64\x22\x0e\x09\xb6\x66\xc0\x2a\x84\xb0\x6a\xc9\x8c\x22\x61\xcd\x80\x6a\xb2\x5c\x51\x86\x1a\xd1\xa3\x5c\x03\xc8\x13\x4a\x44\xc7\xb2\xad\xee\x67\xe7\xa6\x5b\x27\x13\x87\xdf\x4e\xc6\x6d\x90\x29\xcc\xfa\x28\x2d\x73\x61\xa4\x13\x38\xd0\x68\x48\x57\xce\x7b\xa2\x61\x64\xb6\x6d\xf6\x1c\x72\x1c\x07\xc6\x68\xcb\x2a\x9a\x21\xac\xf6\x35\xa7\xd3\x4d\x5d\x3d\xc9\x64\x50\x66\xeb\x32\x1b\xcb\xc0\xac\x47\xbf\x6f\xf4\x14\xa5\x80\xc5\xe7\xc5\x1b\x54\x4d\x7a\xe5\xa7\x5a\xa4\xfe\x41\x7f\x3e\xad\xfe\x96\x04\x78\xb5\xdd\x05\xe6\x2b\x80\xd2\x21\xb7\xbb\x00\x2c\xaa\x97\x09\x42\x2c\x5e\x53\x2c\x3f\xfe\x78\x78\x13\x74\xac\xed\x2e\xd0\x2b\x45\xd5\x34\x55\xe5\x24\xcc\xbf\x21\x2a\x45\x8f\x99\x21\xec\x93\x34\xf3\xaf\x3a\x7e\x23\xe1\x63\xe3\xcd\x07\x14\x04\xaf\xef\x70\x2c\xae\x09\x17\x38\x96\xe7\xc9\x9f\xde\xbd\xcd\xf3\xe8\x35\x43\x01\x0e\x2c\xfb\x91\x97\x22\xb4\x15\xa9\x95\x71\x32\xe9\xce\x4e\x2b\xa0\x10\xb3\xef\xe6\x59\xc6\x1e\x48\x18\x7f\x1e\x5a\x2f\x61\xdc\x44\x0d\x23\x94\x3c\x13\x57\x82\x9a\xc8\x99\x13\x3c\x13\x3d\x03\xd6\x09\x1c\x4f\xc5\xf0\x6f\x33\x8b\xf9\xad\x45\x53\x42\xbe\x5b\x47\x44\x3c\x1b\xb9\x97\xc1\xd7\x4c\x94\x3c\x66\xdd\x1a\x81\x30\xa9\x19\xb8\x88\x3b\xcf\x27\x51\x86\xb3\x76\x53\x65\x5e\xfe\xf0\x6d\x2c\x0a\x90\x95\x8a\x7e\xa6\x84\xf9\x05\xcd\x23\xd8\x39\x44\x1b\x72\x71\x75\xf2\x18\xef\xe2\x76\xe5\x11\x74\x75\xf3\xf2\x1c\x1a\x12\xae\x8d\x90\x79\x05\xf4\x08\x25\x13\xb0\x8d\x94\xba\xd6\x79\x84\x82\x9a\x6f\x43\x14\x29\x89\x1e\x5b\xe6\x94\x44\x6d\x68\xda\x85\xcf\x23\xd8\x1a\x54\x93\xc8\x51\xab\x59\x4f\x56\xcd\xe5\x6d\x42\x19\xd9\xf2\x4f\xfa\x0f\x01\xcc\xfb\xc5\xef\x3e\xcc\xd7\x2c\x38\xe4\xbf\x0d\x10\x90\x3b\xf5\x9e\xa9\x8c\x9e\xc5\x4f\x02\xcc\x79\x82\x62\xe0\x53\xc4\xf9\xc2\x52\xdf\xb6\xb6\x96\x2f\x4b\x6f\xc8\x66\x25\x4e\x6d\xf9\x0b\x8c\xec\x69\xe9\xcc\xfb\x12\x72\xd9\x02\xaf\x2d\xb5\x81\x94\x7d\xb9\xba\x42\x05\xf9\xdf\xc7\xe4\x2a\x77\x88\xc6\xc7\xdc\x12\xa7\xe4\x7a\x92\xf6\xdf\x8a\xed\x53\x91\x36\xf7\xcb\x77\x53\xfe\x3b\xfc\x58\x37\x66\xab\xf7\x7e\x37\x83\xab\xcc\xd3\x2b\xf2\xba\x6b\x7f\x37\xd5\x4f\xca\x91\x2b\xa2\x9a\xcb\x7e\x37\xcd\x0f\xb0\x4e\xb5\xb9\x1f\x9e\x41\x7c\xde\x0f\xc8\x5d\xf1\x7b\x17\xe5\x6a\x15\x75\x01\x60\xb1\x3a\x44\x66\x43\x59\xdd\x72\x69\x2d\xe5\x83\x8c\xba\x05\x21\x73\x4b\xc8\xa4\xb8\xcc\xe9\x56\x33\x59\xeb\xcb\x2a\x7e\xce\x42\x16\x14\x97\xd5\xce\x29\x70\xf5\x84\xbe\x2c\xf7\xe9\x3c\x59\xce\xb7\x83\x3a\x80\x4a\xdd\xcb\x79\x7f\x3b\x58\xce\xfb\x89\x09\xbd\xde\x09\xc1\xe2\x06\x86\x4a\xd8\x95\x52\xad\xef\x4b\x5e\x66\x2d\x47\x40\x62\x60\xbc\x83\x90\x91\x7c\x36\xab\x3c\xb9\x57\xcc\xea\x51\x48\x8a\xde\xa4\xa9\xdb\x4d\xb3\x4b\x2d\xa3\x9b\x12\x64\xbf\x49\xb0\x61\x69\x1d\x4e\xe5\xde\xe5\xcf\xef\x3f\xce\xe6\x7d\x05\xb4\x9c\x93\x38\xd9\x09\xed\x37\x4d\xac\x16\xf2\x19\x5a\x43\xd1\xd3\x6c\x10\x15\x5a\x44\xf9\x36\x5e\x65\x6e\x3f\x69\xd9\x8c\x40\xf6\xd0\x4a\x22\x2f\x51\x34\x53\x9b\x27\xc5\x4b\x6b\x59\x8c\x3c\x65\xf2\x72\x3b\xcc\xfb\x59\xb0\x9f\xf7\xb3\x9f\xff\xf9\xdf\x00\x00\x00\xff\xff\x21\x9e\x94\x05\x16\x48\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 18454, mode: os.FileMode(438), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

